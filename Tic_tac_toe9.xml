<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.

typedef int [0,8] position;

int board[9] = {0,0,0,0,0,0,0,0,0};

int WINNER = -1;</declaration><template><name x="5" y="5">Player</name><declaration>// Place local declarations here.
clock x;


void mark_O(position p){
//if (board[0] == 0){
//board[0] =1;
//}

if (board[p] == 0){
board[p] = 1;
}



}


void mark_X(position p){


if (board[p] == 0){
board[p] = 2;
}


}


bool observe(position p)
   {
 
bool enable = false;



 if (p==1 || p==4 || p==7  ) {

if (board[p-1] == board[p] &amp;&amp; board[p] == board[p+1] &amp;&amp; board[p+1] != 0 )  {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}


if (p==2 || p==5 || p==8  ) {

if (board[p-2] == board[p-1] &amp;&amp; board[p-1] == board[p] &amp;&amp; board[p] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}




if (p==0 || p==3 || p==6 ) {

if (board[p] == board[p+1] &amp;&amp; board[p+1] == board[p+2] &amp;&amp; board[p+2] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}


if (p==0 || p==1 || p==2 ) {

if (board[p] == board[p+3] &amp;&amp; board[p+3] == board[p+6] &amp;&amp; board[p+6] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}



if (p==3 || p==4 || p==5 ) {

if (board[p] == board[p+3] &amp;&amp; board[p+3] == board[p-3] &amp;&amp; board[p-3] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}


if (p==6 || p==7 || p==8 ) {

if (board[p] == board[p-3] &amp;&amp; board[p-3] == board[p-6] &amp;&amp; board[p-6] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}


if (p==0 || p==4 || p==8 ) {

if (board[0] == board[4] &amp;&amp; board[4] == board[8] &amp;&amp; board[8] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}



if (p==2 || p==4 || p==6 ) {

if (board[2] == board[4] &amp;&amp; board[4] == board[6] &amp;&amp; board[6] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}



return enable;

   }</declaration><location id="id0" x="-320" y="-40" color="#00ff00"><name x="-330" y="-70">Goal</name></location><location id="id1" x="16" y="-40"><name x="0" y="-24">INIT</name></location><init ref="id1"/><transition action=""><source ref="id1"/><target ref="id0"/><label kind="select" x="-208" y="-64">i:position</label><label kind="guard" x="-216" y="-40">observe(i)</label><label kind="assignment" x="-240" y="-16">WINNER = board[i]</label></transition><transition controllable="false" action=""><source ref="id1"/><target ref="id1"/><label kind="select" x="-192" y="-216">i: position</label><label kind="guard" x="-88" y="-120">x &gt; 10</label><label kind="assignment" x="-144" y="-288">mark_X(i)</label><nail x="-136" y="-224"/><nail x="-72" y="-272"/></transition><transition action=""><source ref="id1"/><target ref="id1"/><label kind="select" x="288" y="-136">i: position</label><label kind="assignment" x="176" y="-176">mark_O(i)</label><nail x="256" y="-168"/><nail x="296" y="-88"/></transition></template><template><name>Observer</name><declaration>bool observe(position p)
   {
 
bool enable = false;



 if (p==1 || p==4 || p==7  ) {

if (board[p-1]==board[p]==board[p+1] != 0 )  {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}


if (p==2 || p==5 || p==8  ) {

if (board[p-2]==board[p-1]==board[p] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}




if (p==0 || p==3 || p==6 ) {

if (board[p]==board[p+1]==board[p+2] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}


if (p==0 || p==1 || p==2 ) {

if (board[p]==board[p+3]==board[p+6] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}



if (p==3 || p==4 || p==5 ) {

if (board[p]==board[p+3]==board[p-3] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}


if (p==6 || p==7 || p==8 ) {

if (board[p]==board[p-3]==board[p-6] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}


if (p==0 || p==4 || p==8 ) {

if (board[0]==board[4]==board[8] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}



if (p==2 || p==4 || p==6 ) {

if (board[2]==board[4]==board[6] != 0 ) {
                  
		enable = true;
                  //There is a winner
		
		return enable;

		}

}



return enable;

   }</declaration><location id="id2" x="136" y="-48"><name x="126" y="-78">Goal</name></location><location id="id3" x="-448" y="-48"><name x="-458" y="-78">INIT</name></location><init ref="id3"/><transition action=""><source ref="id3"/><target ref="id2"/><label kind="select" x="-88" y="-80">i:position</label><label kind="guard" x="-272" y="-80">observe(i)</label></transition></template><system>// Place template instantiations here.
//Process = Template();

// List one or more processes to be composed into a system.
// system Player, Observer;

system Player;</system></nta>